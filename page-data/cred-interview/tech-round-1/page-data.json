{"componentChunkName":"component---src-templates-blog-post-js","path":"/cred-interview/tech-round-1/","result":{"data":{"site":{"siteMetadata":{"title":"Rahul's Blog"}},"markdownRemark":{"id":"0d057c06-c5a8-5233-acf9-3f7db739b04c","excerpt":"Intro CRED is an Indian  unicorn fintech startup that give rewards for paying credit card bills. But it’s more of a lifestyle brand than being a fintech product…","html":"<h2>Intro</h2>\n<p><a href=\"https://cred.club/\">CRED</a> is an Indian  unicorn fintech startup that give rewards for paying credit card bills. But it’s more of a lifestyle brand than being a fintech product. The credit-score threshold to become a CRED member is around 750, which means it filters out the customers with low credit score. It’s a smart way to provide value experience to the customers. CRED has not became a profit making company yet and still investing more in marketing to gain a large user base, I see an amazing opportunity to grow my skills by contributing in their vision.</p>\n<h2>How I landed the interview?</h2>\n<p>I created my profile on <a href=\"https://www.instahyre.com/\">Instahyre</a> and updated all the neccessary details to stand out from the crowd. In just 2 days, I received a call from an HR at CRED about a frontend developer role &#x26; I decided to give it a try.</p>\n<h2>Interview Process</h2>\n<p>CRED conduct 3-4 interview rounds.\nTech Round 1: 90 minutes\nTech Round 2: 90 minutes\nTech Round 3: 90 minutes\nCultural Fit Round: 60 minutes\nSalary Discussion: 30 minutes</p>\n<h2>Experience: Tech Round 1</h2>\n<p>I met an amazing developer at CRED during the interview. It started with a basic introduction &#x26; then we started talking about Work From Home, Coronavirus, &#x26; Monsoon, etc. Interviewer told me about the working culture, his journey till now and the ongoing projects in web-team at CRED. Then he asked me introduce myself with what I do, what I like and all. So I opened my <a href=\"https://about.rahuldkjain.vercel.app/\">bio</a> and shared the screen to give him a better picture of myself. I told him about my work at zolo, freelancing, animation, and open-source projects. We discussed about business models of CRED and Zolo. He asked me about why I want to switch and all. Then he gave me a moderate javascript problem. I read the problem, repeated what I understood so that we can be on the same page. I prepared the process in my mind and explained him with psuedo codes. Then I started live coding the problem. He gave me hints to make the code working and optimised. I completed the problem. Then we talked about why he joined CRED and how he made the decision to join CRED etc. It was an amazing experience overall. I met a nice developer. </p>\n<h2>Problem</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// applySpec(): Given a specification object that</span>\n<span class=\"token comment\">// recursively maps properties to functions,</span>\n<span class=\"token comment\">// applySpec takes in this specification object and</span>\n<span class=\"token comment\">// returns a function that when called with some arguments</span>\n<span class=\"token comment\">// produces an object of the same structure.</span>\n\n<span class=\"token comment\">// For Eg:</span>\n\n<span class=\"token keyword\">const</span> getMetrics <span class=\"token operator\">=</span> <span class=\"token function\">applySpec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">sum</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">,</span> <span class=\"token comment\">// sum is called with (2, 4)</span>\n  nested<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">mul</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">,</span> <span class=\"token comment\">// mul is called with (2, 4)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">sub</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">getMetrics</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// => { sum: 6, nested: { mul: 8 } }</span></code></pre></div>\n<h2>Solution</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> getMetrics <span class=\"token operator\">=</span> <span class=\"token function\">applySpec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">sum</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">,</span> <span class=\"token comment\">// sum is called with (2, 4)</span>\n  nested<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">mul</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">,</span> <span class=\"token comment\">// mul is called with (2, 4)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">sub</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">specObj<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> keys <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>specObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  keys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> specObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"function\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      newObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> specObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> specObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"object\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> newSpecObj <span class=\"token operator\">=</span> specObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      newObj<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>newSpecObj<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> newObj<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">applySpec</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">specObj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HOC=>\"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>specObj<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Results</h2>\n<p>Cleared the round 1 &#x26; scheduled the round 2 for next week.</p>\n<h2>Recommendations</h2>\n<ul>\n<li><a href=\"https://javascript.info/\">Javascript Info</a>: To learn and improve javascript fundamentals.</li>\n<li><a href=\"https://experience.cred.club/start\">CRED Experience Web App</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=pN6jk0uUrD8&#x26;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP&#x26;ab_channel=AkshaySaini\">Namaster JavaScript</a> by Akshay Saini</li>\n</ul>","frontmatter":{"title":"Interview Experience at CRED","date":"July 20, 2021","description":"Frontend Developer Role Interview Experience at CRED: Round-1"}}},"pageContext":{"slug":"/cred-interview/tech-round-1/","previous":{"fields":{"slug":"/promote-open-source-project/"},"frontmatter":{"title":"How to start and promote your open-source project?"}},"next":{"fields":{"slug":"/cred-interview/cultural-fit-round/"},"frontmatter":{"title":"Cultural Fit Round at CRED"}}}}}